generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  nombre      String
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())

  assignments Assignment[]
}

model Categoria {
  id        Int       @id @default(autoincrement())
  nombre    String    @unique
  equipos   Equipo[]
  items     Item[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Item {
  id          Int          @id @default(autoincrement())
  nombre      String
  categoriaId Int
  categoria   Categoria    @relation(fields: [categoriaId], references: [id])
  assignments Assignment[]
}

model Assignment {
  id         Int      @id @default(autoincrement())
  userId     Int
  itemId     Int
  user       User     @relation(fields: [userId], references: [id])
  item       Item     @relation(fields: [itemId], references: [id])
  assignedAt DateTime @default(now())
  returnedAt DateTime?
}

model Equipo {
  id          Int        @id @default(autoincrement())
  nombre      String
  codigo      String     @unique
  estado      String     @default("Activo")
  sede        String?    // ðŸ”¹ Campo opcional de sede
  categoriaId Int?
  categoria   Categoria? @relation(fields: [categoriaId], references: [id])
  stock       Stock?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Stock {
  id        Int      @id @default(autoincrement())
  equipoId  Int      @unique
  cantidad  Int      @default(1)
  equipo    Equipo   @relation(fields: [equipoId], references: [id])
  createdAt DateTime @default(now())
}

enum Role {
  ADMIN
  SUPERVISOR
  AGENT
}

enum ItemStatus {
  ACTIVE
  IN_REPAIR
  RETIRED
}
