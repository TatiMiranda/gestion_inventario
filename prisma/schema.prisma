datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model CentroCostos {
  id_centroCostos Int      @id @default(autoincrement())
  nombre          String
  id_sede         Int
  id_equipo       Int
  id_seguimiento  Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  sede        Sede        @relation(fields: [id_sede], references: [id_sede])
  equipo      Equipo      @relation(fields: [id_equipo], references: [id_equipo])
  seguimiento Seguimiento @relation(fields: [id_seguimiento], references: [id_seguimiento])

  @@map("CentroCostos")
}

model Equipo {
  id_equipo    Int      @id @default(autoincrement())
  nombre       String
  id_categoria Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  categoria    Categoria      @relation(fields: [id_categoria], references: [id_categoria])
  stock        Stock[]
  seguimiento  Seguimiento[]
  centroCostos CentroCostos[]
  proveedores  Proveedores[] // ðŸ‘ˆ RelaciÃ³n inversa agregada

  @@map("Equipo")
}

model Categoria {
  id_categoria Int      @id @default(autoincrement())
  nombre       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  equipos Equipo[]

  @@map("Categoria")
}

model Proveedores {
  id_proveedor Int      @id @default(autoincrement())
  nombre       String
  id_equipo    Int
  id_stock     Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  equipo Equipo @relation(fields: [id_equipo], references: [id_equipo])
  stock  Stock  @relation(fields: [id_stock], references: [id_stock])

  @@map("Proveedores")
}

model Sede {
  id_sede   Int      @id @default(autoincrement())
  nombre    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  centroCostos       CentroCostos[]
  stock              Stock[]
  seguimientoOrigen  Seguimiento[]  @relation("SedeOrigen")
  seguimientoDestino Seguimiento[]  @relation("SedeDestino")

  @@map("Sede")
}

model Seguimiento {
  id_seguimiento  Int      @id @default(autoincrement())
  id_equipo       Int
  id_sede_origen  Int
  id_sede_destino Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  equipo       Equipo @relation(fields: [id_equipo], references: [id_equipo])
  sede_origen  Sede   @relation("SedeOrigen", fields: [id_sede_origen], references: [id_sede])
  sede_destino Sede   @relation("SedeDestino", fields: [id_sede_destino], references: [id_sede])

  centroCostos CentroCostos[]

  @@map("Seguimiento")
}

model Stock {
  id_stock  Int      @id @default(autoincrement())
  id_equipo Int
  id_sede   Int
  cantidad  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  equipo      Equipo        @relation(fields: [id_equipo], references: [id_equipo])
  sede        Sede          @relation(fields: [id_sede], references: [id_sede])
  proveedores Proveedores[]

  @@map("Stock")
}

model Usuarios {
  id_usuario Int      @id @default(autoincrement())
  nombre     String
  email      String   @unique
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("Usuarios")
}
