datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Usuario {
  id        Int      @id @default(autoincrement())
  nombre    String
  email     String   @unique
  password  String
  rol       String?
  createdAt DateTime @default(now())
}

model Categoria {
  id          Int      @id @default(autoincrement())
  nombre      String
  descripcion String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // RelaciÃ³n inversa con Equipo
  equipos Equipo[]
}

model Equipo {
  id           Int       @id @default(autoincrement())
  nombre       String
  descripcion  String?
  id_categoria Int
  categoria    Categoria @relation(fields: [id_categoria], references: [id])

  stock        Stock[]
  CentroCostos CentroCostos[]
  Sede         Sede?          @relation(fields: [sedeId], references: [id])
  sedeId       Int?
  Seguimiento  Seguimiento[]
}

model CentroCostos {
  id             Int         @id @default(autoincrement())
  nombre         String
  id_equipo      Int
  id_sede        Int
  id_seguimiento Int
  equipo         Equipo      @relation(fields: [id_equipo], references: [id])
  sede           Sede        @relation(fields: [id_sede], references: [id])
  seguimiento    Seguimiento @relation(fields: [id_seguimiento], references: [id])
}

model Sede {
  id                  Int            @id @default(autoincrement())
  nombre              String
  direccion           String?
  equipos             Equipo[] // ðŸ‘ˆ inversa con Equipo
  stock               Stock[]
  centrocostos        CentroCostos[]
  seguimientosOrigen  Seguimiento[]  @relation("SedeOrigen")
  seguimientosDestino Seguimiento[]  @relation("SedeDestino")
}

model Seguimiento {
  id              Int            @id @default(autoincrement())
  fecha           DateTime       @default(now())
  id_equipo       Int
  id_sede_origen  Int
  id_sede_destino Int
  equipo          Equipo         @relation(fields: [id_equipo], references: [id])
  sedeOrigen      Sede           @relation("SedeOrigen", fields: [id_sede_origen], references: [id])
  sedeDestino     Sede           @relation("SedeDestino", fields: [id_sede_destino], references: [id])
  centrocostos    CentroCostos[] // ðŸ‘ˆ inversa con CentroCostos
}

model Stock {
  id        Int    @id @default(autoincrement())
  cantidad  Int
  id_equipo Int
  id_sede   Int
  equipo    Equipo @relation(fields: [id_equipo], references: [id])
  sede      Sede   @relation(fields: [id_sede], references: [id])
}
